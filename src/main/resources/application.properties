spring.application.name=onboarding

server.port=8081
# Database Configuration
#DataSource COnfig
spring.datasource.url=jdbc:postgresql://pg-672497d-abineshsiva191-ee26.j.aivencloud.com:14286/defaultdb?ssl=require&currentSchema=authentications
spring.datasource.username=avnadmin
spring.datasource.password=AVNS_ie6aq2Zw4OkK64OJiRZ
spring.datasource.driver-class-name=org.postgresql.Driver


# HikariCP Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

# Batch Processing Configuration for Performance
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true



# Swagger/OpenAPI Configuration
springdoc.openapi.version=1.0.0
springdoc.openapi.description=REST API for managing data source configurations and onboarding processes
springdoc.openapi.contact.name=RefinePoint Team
springdoc.openapi.contact.email=support@refinepoint.com
springdoc.openapi.contact.url=https://refinepoint.com
springdoc.openapi.license.name=Apache 2.0
springdoc.openapi.license.url=https://www.apache.org/licenses/LICENSE-2.0

# Application specific

# Client Registration Configuration
app.client-registration.hmac-secret=your-secure-hmac-secret-key-here-should-be-at-least-32-characters-long

# Web Configuration
app.cors.allowed-origins=*
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true
app.cors.max-age=3600

# OAuth2 Authorization Server Configuration
spring.security.oauth2.authorizationserver.issuer=http://localhost:8081
spring.security.oauth2.authorizationserver.endpoint.authorization-uri=/oauth2/authorize
spring.security.oauth2.authorizationserver.endpoint.token-uri=/oauth2/token
spring.security.oauth2.authorizationserver.endpoint.jwk-set-uri=/oauth2/jwks
spring.security.oauth2.authorizationserver.endpoint.revocation-uri=/oauth2/revoke
spring.security.oauth2.authorizationserver.endpoint.introspection-uri=/oauth2/introspect
spring.security.oauth2.authorizationserver.endpoint.device-authorization-uri=/oauth2/device_authorization
spring.security.oauth2.authorizationserver.endpoint.device-verification-uri=/oauth2/device_verification

# JWT Token Configuration
spring.security.oauth2.authorizationserver.jwt.access-token-time-to-live=PT1H
spring.security.oauth2.authorizationserver.jwt.refresh-token-time-to-live=P30D
spring.security.oauth2.authorizationserver.jwt.authorization-code-time-to-live=PT10M
spring.security.oauth2.authorizationserver.jwt.device-code-time-to-live=PT10M

# Session Management
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=lax
server.servlet.session.tracking-modes=cookie
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always

# Security Configuration
spring.security.filter.order=100
spring.security.require-ssl=false

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.health.db.enabled=true
management.metrics.export.prometheus.enabled=true

# Logging Configuration
logging.level.org.springframework.security=INFO
logging.level.org.springframework.security.oauth2=INFO
logging.level.org.springframework.security.web=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.example.authserver=INFO
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Error Handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-exception=false

# Validation Configuration
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Jackson Configuration
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# Thymeleaf Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML

# DevTools Configuration
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.add-properties=true

# Tenant Configuration
app.tenant.default-tenant=default
app.tenant.header-name=X-Tenant-ID
app.tenant.resolve-strategy=header

# MFA Configuration
app.mfa.enabled=true
app.mfa.issuer=AuthServer
app.mfa.qr-code-enabled=true

# Password Policy
app.password.min-length=8
app.password.require-uppercase=true
app.password.require-lowercase=true
app.password.require-digits=true
app.password.require-special-chars=true
app.password.max-attempts=5
app.password.lockout-duration=PT30M

# Rate Limiting
app.rate-limit.enabled=true
app.rate-limit.requests-per-minute=60
app.rate-limit.burst-capacity=100

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=users,clients,roles,permissions

# Data Source Connection Pool Monitoring
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1